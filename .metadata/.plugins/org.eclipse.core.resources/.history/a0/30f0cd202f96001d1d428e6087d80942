package com.springbootweb.apirest.controllers;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseStatus;
import org.springframework.web.bind.annotation.RestController;

import com.springbootweb.apiirest.models.services.IProductosService;
import com.springbootweb.apirestmodels.entity.Productos;

@CrossOrigin(origins={"http://localhost:4200"})
@RestController
@RequestMapping("/apiProductos")
public class ProductosRestController {
	@Autowired
	private IProductosService produService;
	
	@GetMapping("/listarProducto")
	public List<Productos>index(){
		return produService.findAll();
		
	}
	
	@PostMapping("/guardarProducto")
	@ResponseStatus(HttpStatus.CREATED)
	public Productos create(@RequestBody Productos producto){
		return  produService.save(producto);
		
	}
	
	@GetMapping("/buscarProducto/{id}")
	public Productos show(@PathVariable Long id){
		return  produService.findById(id);
		
	}
	
	@DeleteMapping("/eliminarProducto/{id}")
	@ResponseStatus(HttpStatus.NO_CONTENT)
	public void delete (@PathVariable Long id) {
		 produService.delete(id);
	}
	
	@PutMapping("/editarProducto/{id}")
	@ResponseStatus(HttpStatus.CREATED)
	public Productos update(@RequestBody Productos producto,@PathVariable Long id) {
		Productos productoactual = produService.findById(id);
		productoactual.setNombre(producto.getNombre());
		productoactual.setDescripcion(producto.getDescripcion());
		productoactual.setCosto(producto.getCosto());
		productoactual.setStock(producto.getStock());
	
		return  produService.save(productoactual);
		
	}
}
